<?xml version="1.0"?>
<!-- $Id: install.xml,v 1.1.2.70 2006/04/01 01:39:05 starksm Exp $ -->
<installation version="1.0">
	<info>
		<appname>@{dist.name}</appname>
		<appversion>@{dist.version} @{dist.nickname}</appversion>
		<appsubpath>@{dist.shortname}</appsubpath>
		<url>@{dist.url}</url>
		<javaversion>1.6</javaversion>
		<run-privileged condition="izpack.windowsinstall.vista|izpack.windowsinstall.7|izpack.macinstall"/>
	</info>

	<!-- See dist pom.xml -->
	<variables>
		<variable name="DIST_NAME" value="@{dist.name}" />
		<variable name="DIST_SHORTNAME" value="@{dist.shortname}" />
		<variable name="DIST_VERSION" value="@{dist.version}" />
		<variable name="DIST_NICKNAME" value="@{dist.nickname}" />
		<variable name="DIST_URL" value="@{dist.url}" />
		<variable name="DIST_EMAIL" value="@{dist.email}" />
		<variable name="CONSOLE_TITLE" value="@{dist.wrapper.console.title}" />
		<variable name="NTSERVICE_NAME" value="@{dist.wrapper.ntservice.name}" />
		<variable name="NTSERVICE_DISPLAYNAME" value="@{dist.wrapper.ntservice.displayname}" />
		<variable name="NTSERVICE_DESCRIPTION" value="@{dist.wrapper.ntservice.description}" />
	</variables>

	<conditions>
		<condition type="variable" id="isServiceInstall">
			<name>IS_SERVICE_INSTALL</name>
			<value>true</value>
		</condition>
		<condition type="variable" id="isServiceStart">
			<name>IS_SERVICE_START</name>
			<value>true</value>
		</condition>
		<condition type="variable" id="proxyInUse">
			<name>PROXY_IN_USE</name>
			<value>true</value>
		</condition>
	</conditions>

	<!-- 
		The gui preferences indication.
	-->
	<guiprefs width="679" height="513" resizable="yes">
		<modifier key="langDisplayType" value="native" />
		<modifier key="headingPanelCounter" value="progressbar" />
		<modifier key="headingPanelCounterPos" value="inNavigationPanel" />
		<modifier value="true" key="showDebugWindow" />
	</guiprefs>

	<locale>
		<langpack iso3="eng" />
		<langpack iso3="deu" />
	</locale>

	<!-- 
		The resources section.
		The ids must be these ones if you want to use the LicencePanel and/or the InfoPanel.
	-->
	<resources>
		<res id="HTMLLicencePanel.licence" src="@{basedir}/resources/gpl-2.0.html" />
		<res id="Installer.image.0" src="@{basedir}/resources/images/sidebar.png" />
<!--		<res id="Installer.image.1" src="@{basedir}/resources/images/sidebar2.png" />-->
		<res id="installer.langsel.img" src="@{basedir}/resources/images/select-language.png" />
		<res id="packsLang.xml_deu" src="@{basedir}/resources/packsLang-deu.xml" />
		<res id="shortcutSpec.xml" src="@{basedir}/resources/shortcutSpec.xml" />
		<res id="TargetPanel.dir.unix" src="@{basedir}/resources/targetPanelDirUnix.txt" />
		<res id="userInputSpec.xml" src="@{basedir}/resources/userInputSpec.xml" />
		<res id="userInputLang.xml_deu" src="@{basedir}/resources/userInputLang-deu.xml" />
		<res id="userInputLang.xml_eng" src="@{basedir}/resources/userInputLang-eng.xml" />
	</resources>

	<native type="izpack" name="ShellLink.dll" />
	<native type="izpack" name="ShellLink_x64.dll" />

	<!-- 
		The panels section.
		We indicate here which panels we want to use. The order will be respected.
	-->
	<!--diese Panels (classname= ... ) werden von IzPack zur VerfÃ¼gung gestellt -->
	<panels>
		<panel classname="HelloPanel" />
		<panel classname="HTMLLicencePanel" />
		<panel classname="TargetPanel" />
		<panel classname="PacksPanel" />

		<!-- "UserInputPanel.[0-4]: zu jeder Zahl gibt es in './resources/userInputSpec.xml' einen eigenen Abschnitt -->
		<panel classname="UserInputPanel" id="UserInputPanel.0" />
		<panel classname="UserInputPanel" id="UserInputPanel.1" />
		<panel classname="UserInputPanel" id="UserInputPanel.2" condition="isServiceInstall" />
		<panel classname="UserInputPanel" id="UserInputPanel.3" condition="isServiceInstall" />
		<panel classname="UserInputPanel" id="UserInputPanel.4" condition="proxyInUse" />
		
		<panel classname="InstallPanel" />
		<panel classname="ShortcutPanel" condition="izpack.windowsinstall" />
		<panel classname="SimpleFinishPanel" />
	</panels>

	<!-- 
		The packs section.
		We specify here our packs.
	-->
	<packs>
		<pack name="server" id="server" group="core" required="yes">
			<description>Server Installation</description>
			<fileset dir="@{dist.dir}" targetdir="$INSTALL_PATH" override="true">
				<exclude name="server/default/data/apacheds-store/**" />
			</fileset>

			<!-- Files to parse -->
			<parsable targetfile="$INSTALL_PATH/bin/install.sh" type="shell" />
			<parsable targetfile="$INSTALL_PATH/bin/start.sh" type="shell" />
			<parsable targetfile="$INSTALL_PATH/bin/uninstall.sh" type="shell" />
			<parsable targetfile="$INSTALL_PATH/wrapper/wrapper.conf" />
<!--			<parsable targetfile="$INSTALL_PATH/server/default/data/nfs/root/etc/sources.list" />-->
			<parsable targetfile="$INSTALL_PATH/server/default/data/nfs/root/etc/package_manager.properties" />
		</pack>

		<pack name="environment" id="environment" group="core" required="yes">
			<description>Initial environment with preconfigured devices and hardware types</description>
			<fileset dir="@{dist.dir}/server/default/data/apacheds-store" targetdir="$INSTALL_PATH/server/default/data/apacheds-store" override="askfalse" />
			<parsable targetfile="$INSTALL_PATH/bin/environment-install.cmd" />
			<parsable targetfile="$INSTALL_PATH/bin/environment-uninstall.cmd" />
			<executable targetfile="$INSTALL_PATH/bin/environment-install.cmd" stage="postinstall" keep="true" condition="izpack.windowsinstall" />
			<executable targetfile="$INSTALL_PATH/bin/environment-uninstall.cmd" stage="uninstall" keep="true" condition="izpack.windowsinstall" />
		</pack>

		<pack name="postinstall" id="postinstall" required="yes">
			<description>System adjustments after installation</description>

			<!-- Set executable flag -->
			<executable targetfile="$INSTALL_PATH/bin/install.sh" stage="never" condition="izpack.linuxinstall" />
			<executable targetfile="$INSTALL_PATH/bin/start.sh" stage="never" condition="izpack.linuxinstall" />
			<executable targetfile="$INSTALL_PATH/bin/uninstall.sh" stage="never" condition="izpack.linuxinstall" />
			<executable targetfile="$INSTALL_PATH/bin/wrapper-linux-ppc-64" stage="never" condition="izpack.linuxinstall" />
			<executable targetfile="$INSTALL_PATH/bin/wrapper-linux-x86-32" stage="never" condition="izpack.linuxinstall" />
			<executable targetfile="$INSTALL_PATH/bin/wrapper-linux-x86-64" stage="never" condition="izpack.linuxinstall" />
			<executable targetfile="$INSTALL_PATH/bin/wrapper-macosx-ppc-32" stage="never" condition="izpack.linuxinstall" />
			<executable targetfile="$INSTALL_PATH/bin/wrapper-macosx-universal-32" stage="never" condition="izpack.linuxinstall" />
			<executable targetfile="$INSTALL_PATH/bin/wrapper-solaris-sparc-32" stage="never" condition="izpack.linuxinstall" />
			<executable targetfile="$INSTALL_PATH/bin/wrapper-solaris-sparc-64" stage="never" condition="izpack.linuxinstall" />
			<executable targetfile="$INSTALL_PATH/bin/wrapper-solaris-x86-32" stage="never" condition="izpack.linuxinstall" />

			<!-- Windows service -->
			<executable targetfile="$INSTALL_PATH/bin/install.cmd" stage="postinstall" keep="true" condition="isServiceInstall+izpack.windowsinstall" />
			<executable targetfile="$INSTALL_PATH/bin/start.cmd" stage="postinstall" keep="true" condition="isServiceInstall+isServiceStart+izpack.windowsinstall" />
			<executable targetfile="$INSTALL_PATH/bin/uninstall.cmd" stage="uninstall" keep="true" condition="isServiceInstall+izpack.windowsinstall" />

			<!-- Linux service -->
			<executable targetfile="$INSTALL_PATH/bin/install.sh" stage="postinstall" keep="true" condition="isServiceInstall+izpack.linuxinstall" />
			<executable targetfile="$INSTALL_PATH/bin/start.sh" stage="postinstall" keep="true" condition="isServiceStart+izpack.linuxinstall">
				<args>
					<arg value="start" />
				</args>
			</executable>
			<executable targetfile="$INSTALL_PATH/bin/uninstall.sh" stage="uninstall" keep="true" condition="isServiceInstall+izpack.linuxinstall" />
		</pack>
	</packs>

</installation>
