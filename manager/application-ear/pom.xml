<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.openthinclient</groupId>
		<artifactId>manager</artifactId>
		<version>1.0.1</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>manager-application-ear</artifactId>
	<packaging>ear</packaging>
	<name>openthinclient.org Manager EAR</name>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-ear-plugin</artifactId>
				<!--				<version>2.2</version>-->
				<configuration>
					<generateApplicationXml>false</generateApplicationXml>
					<modules>
						<!--ejbVersion>3.0</ejbVersion-->
						<ejbModule>
							<groupId>org.openthinclient</groupId>
							<artifactId>remoted-ejb</artifactId>
							<bundleDir>/</bundleDir>
							<bundleFileName>remoted-ejb.jar</bundleFileName>
						</ejbModule>
						
						<ejbModule>
							<groupId>org.openthinclient</groupId>
							<artifactId>package-manager</artifactId>
							<bundleDir>/</bundleDir>
							<bundleFileName>package-manager.jar</bundleFileName>
						</ejbModule>
						
						<webModule>
							<groupId>org.openthinclient</groupId>
							<artifactId>server-servlet</artifactId>
							<bundleDir>/</bundleDir>
							<bundleFileName>server-servlet.war</bundleFileName>
						</webModule>
						
						<webModule>
							<groupId>org.openthinclient</groupId>
							<artifactId>console</artifactId>
							<bundleDir>/</bundleDir>
							<bundleFileName>console.war</bundleFileName>
						</webModule>
						
						<jarModule>
							<groupId>commons-io</groupId>
							<artifactId>commons-io</artifactId>
							<bundleDir>/</bundleDir>
							<bundleFileName>commons-io.jar</bundleFileName>
						</jarModule>

						<jarModule>
							<groupId>com.levigo.util</groupId>
							<artifactId>base</artifactId>
							<bundleDir>/</bundleDir>
							<bundleFileName>base.jar</bundleFileName>
						</jarModule>

						<jarModule>
							<groupId>com.levigo.util</groupId>
							<artifactId>logging</artifactId>
							<bundleDir>/</bundleDir>
							<bundleFileName>logging.jar</bundleFileName>
						</jarModule>

						<jarModule>
							<groupId>com.levigo.util</groupId>
							<artifactId>preferences</artifactId>
							<bundleDir>/</bundleDir>
							<bundleFileName>preferences.jar</bundleFileName>
						</jarModule>

						<jarModule>
							<groupId>castor</groupId>
							<artifactId>castor</artifactId>
							<bundleDir>/</bundleDir>
							<bundleFileName>castor.jar</bundleFileName>
						</jarModule>
					</modules>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jboss-maven-plugin</artifactId>
				<configuration>
					<jbossHome>${basedir}/../../jboss</jbossHome>
					<port>9090</port>
					<serverName>default/data/nfs/root</serverName>
				</configuration>
				<executions>
					<!--execution>
						<id>jboss-start</id>
						<phase>pre-integration-test</phase>
						<goals>
						<goal>configure</goal>
						<goal>startAndWait</goal>
						<goal>deploy</goal>
						</goals>
						</execution-->
					<execution>
						<id>jboss-harddeploy</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>harddeploy</goal>
						</goals>
					</execution>
					<!--execution>
						<id>jboss-stop</id>
						<phase>post-integration-test</phase>
						<goals>
						<goal>undeploy</goal>
						<goal>stop</goal>
						</goals>
						</execution-->
				</executions>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- 
			<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>nlog4j</artifactId>
			</dependency>
			<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<scope>provided</scope>
			</dependency>
		-->
		<dependency>
			<groupId>castor</groupId>
			<artifactId>castor</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openthinclient</groupId>
			<artifactId>remoted-ejb</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>org.openthinclient</groupId>
			<artifactId>package-manager</artifactId>
			<version>${project.version}</version>
			<type>ejb</type>
		</dependency>
		<dependency>
			<groupId>org.openthinclient</groupId>
			<artifactId>server-servlet</artifactId>
			<version>${project.version}</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>org.openthinclient</groupId>
			<artifactId>console</artifactId>
			<version>${project.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.openthinclient</groupId>
			<artifactId>console</artifactId>
			<version>${project.version}</version>
			<type>war</type>

			<!-- 
				"provided" is a lie, of course. It is used as a hack to de-couple the 
				packaging of the dependency from this sub-project's execution. Otherwise
				the jnlp:jnlp-inline mojo of the referenced project would not be executed.
			-->
			<scope>provided</scope>
		</dependency>
	</dependencies>

</project>